from aiogram import Router, types, F
from datetime import datetime
from bot.services.cache import data_cache
from bot.utils.keyboards import get_main_menu_keyboard


router = Router()

def add_timestamp(text: str) -> str:
    """–î–æ–±–∞–≤–ª—è–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—É—é –º–µ—Ç–∫—É –∫ —Å–æ–æ–±—â–µ–Ω–∏—é"""
    if text and "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ:" in text:
        return f"{text.split('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ:')[0].strip()}\n\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}"
    return f"{text or '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}\n\nüîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {datetime.now().strftime('%H:%M:%S')}"

@router.callback_query(F.data == "weather")
async def weather_callback(callback: types.CallbackQuery):
    try:
        weather_text = await data_cache.get_weather()
        updated_text = add_timestamp(weather_text)
        await callback.message.edit_text(
            text=updated_text,
            reply_markup=get_main_menu_keyboard()
        )
        await callback.answer("–î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞" if data_cache.is_cached("weather") else "–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        await callback.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", show_alert=True)

@router.callback_query(F.data == "geomagnetic")
async def geomagnetic_callback(callback: types.CallbackQuery):
    try:
        geomagnetic_text = await data_cache.get_geomagnetic_data()  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
        updated_text = add_timestamp(geomagnetic_text)
        await callback.message.edit_text(
            text=updated_text,
            reply_markup=get_main_menu_keyboard()
        )
        await callback.answer("–î–∞–Ω–Ω—ã–µ –∏–∑ –∫—ç—à–∞" if data_cache.is_cached("geomagnetic") else "–ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã")
    except Exception as e:
        await callback.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", show_alert=True)

@router.callback_query(F.data == "refresh")
async def refresh_callback(callback: types.CallbackQuery):
    try:
        if "–ü–æ–≥–æ–¥–∞" in callback.message.text:
            # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
            data_cache.force_expire("weather")
            new_data = await data_cache.get_weather()
        elif "–ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è" in callback.message.text:
            data_cache.force_expire("geomagnetic")
            new_data = await data_cache.get_geomagnetic_data()
        else:
            await callback.answer("‚ùå –ù–µ–ª—å–∑—è –æ–±–Ω–æ–≤–∏—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ", show_alert=True)
            return
        
        updated_text = add_timestamp(new_data)
        await callback.message.edit_text(
            text=updated_text,
            reply_markup=get_main_menu_keyboard()
        )
        await callback.answer("üîÑ –î–∞–Ω–Ω—ã–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")
    except Exception as e:
        await callback.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", show_alert=True)

@router.callback_query(F.data == "help")
async def help_callback(callback: types.CallbackQuery):
    try:
        await callback.message.edit_text(
            "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
            "/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
            "/weather - –ü–æ–≥–æ–¥–∞ –≤ –°–∞–º–∞—Ä–µ\n"
            "/storm - –ì–µ–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å\n"
            "/subscribe - –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n"
            "/unsubscribe - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π\n\n"
            "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ:",
            reply_markup=get_main_menu_keyboard()
        )
        await callback.answer()
    except Exception as e:
        await callback.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞: {e}", show_alert=True)
